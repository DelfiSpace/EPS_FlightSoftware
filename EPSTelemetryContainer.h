//File Generated By TelemetryFromXTCE.py

#ifndef EPSTELEMETRYCONTAINER_H_
#define EPSTELEMETRYCONTAINER_H_

#include "TelemetryContainer.h"

#define EPS_CONTAINER_SIZE  111

class EPSTelemetryContainer : public TelemetryContainer
{
protected:
unsigned char telemetry[EPS_CONTAINER_SIZE];

public:
    virtual int size();
    virtual unsigned char * getArray();

    char getStatus();
    void setStatus(char var);

    char getBootCounter();
    void setBootCounter(char var);

    long getResetCause();
    void setResetCause(long var);

    unsigned long getUptime();
    void setUptime(unsigned long var);

    unsigned long getTotalUptime();
    void setTotalUptime(unsigned long var);

    char getVersionNumber();
    void setVersionNumber(char var);

    short getMCUTemp();
    void setMCUTemp(short var);

    bool getBATTERY_INA_STATUS();
    void setBATTERY_INA_STATUS(bool var);

    bool getBATTERY_GG_STATUS();
    void setBATTERY_GG_STATUS(bool var);

    bool getINTERNAL_INA_STATUS();
    void setINTERNAL_INA_STATUS(bool var);

    bool getUNREGULATED_INA_STATUS();
    void setUNREGULATED_INA_STATUS(bool var);

    bool getBUS1_INA_STATUS();
    void setBUS1_INA_STATUS(bool var);

    bool getBUS2_INA_STATUS();
    void setBUS2_INA_STATUS(bool var);

    bool getBUS3_INA_STATUS();
    void setBUS3_INA_STATUS(bool var);

    bool getBUS4_INA_STATUS();
    void setBUS4_INA_STATUS(bool var);

    bool getBUS4_ERROR();
    void setBUS4_ERROR(bool var);

    bool getBUS3_ERROR();
    void setBUS3_ERROR(bool var);

    bool getBUS2_ERROR();
    void setBUS2_ERROR(bool var);

    bool getBUS1_ERROR();
    void setBUS1_ERROR(bool var);

    bool getBUS4_STATE();
    void setBUS4_STATE(bool var);

    bool getBUS3_STATE();
    void setBUS3_STATE(bool var);

    bool getBUS2_STATE();
    void setBUS2_STATE(bool var);

    bool getBUS1_STATE();
    void setBUS1_STATE(bool var);

    bool getCELLOUT_YP_INA_STATUS();
    void setCELLOUT_YP_INA_STATUS(bool var);

    bool getCELLOUT_YM_INA_STATUS();
    void setCELLOUT_YM_INA_STATUS(bool var);

    bool getCELLOUT_XP_INA_STATUS();
    void setCELLOUT_XP_INA_STATUS(bool var);

    bool getCELLOUT_XM_INA_STATUS();
    void setCELLOUT_XM_INA_STATUS(bool var);

    bool getCELLOUT_YP_TMP_STATUS();
    void setCELLOUT_YP_TMP_STATUS(bool var);

    bool getCELLOUT_YM_TMP_STATUS();
    void setCELLOUT_YM_TMP_STATUS(bool var);

    bool getCELLOUT_XP_TMP_STATUS();
    void setCELLOUT_XP_TMP_STATUS(bool var);

    bool getCELLOUT_XM_TMP_STATUS();
    void setCELLOUT_XM_TMP_STATUS(bool var);

    bool getMPPT_YP_INA_STATUS();
    void setMPPT_YP_INA_STATUS(bool var);

    bool getMPPT_YM_INA_STATUS();
    void setMPPT_YM_INA_STATUS(bool var);

    bool getMPPT_XP_INA_STATUS();
    void setMPPT_XP_INA_STATUS(bool var);

    bool getMPPT_XM_INA_STATUS();
    void setMPPT_XM_INA_STATUS(bool var);

    bool getPANELOUT_YP_INA_STATUS();
    void setPANELOUT_YP_INA_STATUS(bool var);

    bool getPANELOUT_YM_INA_STATUS();
    void setPANELOUT_YM_INA_STATUS(bool var);

    bool getPANELOUT_XP_INA_STATUS();
    void setPANELOUT_XP_INA_STATUS(bool var);

    bool getPANELOUT_XM_INA_STATUS();
    void setPANELOUT_XM_INA_STATUS(bool var);

    short getINTERNAL_INA_CURRENT();
    void setINTERNAL_INA_CURRENT(short var);

    short getINTERNAL_INA_VOLTAGE();
    void setINTERNAL_INA_VOLTAGE(short var);

    short getUNREGULATED_INA_CURRENT();
    void setUNREGULATED_INA_CURRENT(short var);

    short getUNREGULATED_INA_VOLTAGE();
    void setUNREGULATED_INA_VOLTAGE(short var);

    short getBATTERY_GG_VOLTAGE();
    void setBATTERY_GG_VOLTAGE(short var);

    short getBATTERY_INA_VOLTAGE();
    void setBATTERY_INA_VOLTAGE(short var);

    short getBATTERY_INA_CURRENT();
    void setBATTERY_INA_CURRENT(short var);

    short getBATTERY_GG_CAPACITY();
    void setBATTERY_GG_CAPACITY(short var);

    short getBATTERY_GG_TEMP();
    void setBATTERY_GG_TEMP(short var);

    short getBATTERY_TMP20_TEMP();
    void setBATTERY_TMP20_TEMP(short var);

    short getBUS4_VOLTAGE();
    void setBUS4_VOLTAGE(short var);

    short getBUS3_VOLTAGE();
    void setBUS3_VOLTAGE(short var);

    short getBUS2_VOLTAGE();
    void setBUS2_VOLTAGE(short var);

    short getBUS1_VOLTAGE();
    void setBUS1_VOLTAGE(short var);

    short getBUS4_CURRENT();
    void setBUS4_CURRENT(short var);

    short getBUS3_CURRENT();
    void setBUS3_CURRENT(short var);

    short getBUS2_CURRENT();
    void setBUS2_CURRENT(short var);

    short getBUS1_CURRENT();
    void setBUS1_CURRENT(short var);

    short getCELLOUT_YP_CURRENT();
    void setCELLOUT_YP_CURRENT(short var);

    short getCELLOUT_YM_CURRENT();
    void setCELLOUT_YM_CURRENT(short var);

    short getCELLOUT_XP_CURRENT();
    void setCELLOUT_XP_CURRENT(short var);

    short getCELLOUT_XM_CURRENT();
    void setCELLOUT_XM_CURRENT(short var);

    short getCELLOUT_YP_VOLTAGE();
    void setCELLOUT_YP_VOLTAGE(short var);

    short getCELLOUT_YM_VOLTAGE();
    void setCELLOUT_YM_VOLTAGE(short var);

    short getCELLOUT_XP_VOLTAGE();
    void setCELLOUT_XP_VOLTAGE(short var);

    short getCELLOUT_XM_VOLTAGE();
    void setCELLOUT_XM_VOLTAGE(short var);

    short getCELLOUT_YP_TEMPERATURE();
    void setCELLOUT_YP_TEMPERATURE(short var);

    short getCELLOUT_YM_TEMPERATURE();
    void setCELLOUT_YM_TEMPERATURE(short var);

    short getCELLOUT_XP_TEMPERATURE();
    void setCELLOUT_XP_TEMPERATURE(short var);

    short getCELLOUT_XM_TEMPERATURE();
    void setCELLOUT_XM_TEMPERATURE(short var);

    short getMPPT_YP_CURRENT();
    void setMPPT_YP_CURRENT(short var);

    short getMPPT_YM_CURRENT();
    void setMPPT_YM_CURRENT(short var);

    short getMPPT_XP_CURRENT();
    void setMPPT_XP_CURRENT(short var);

    short getMPPT_XM_CURRENT();
    void setMPPT_XM_CURRENT(short var);

    short getMPPT_YP_VOLTAGE();
    void setMPPT_YP_VOLTAGE(short var);

    short getMPPT_YM_VOLTAGE();
    void setMPPT_YM_VOLTAGE(short var);

    short getMPPT_XP_VOLTAGE();
    void setMPPT_XP_VOLTAGE(short var);

    short getMPPT_XM_VOLTAGE();
    void setMPPT_XM_VOLTAGE(short var);

    short getPANELOUT_YP_VOLTAGE();
    void setPANELOUT_YP_VOLTAGE(short var);

    short getPANELOUT_YM_VOLTAGE();
    void setPANELOUT_YM_VOLTAGE(short var);

    short getPANELOUT_XP_VOLTAGE();
    void setPANELOUT_XP_VOLTAGE(short var);

    short getPANELOUT_XM_VOLTAGE();
    void setPANELOUT_XM_VOLTAGE(short var);

    short getPANELOUT_YP_CURRENT();
    void setPANELOUT_YP_CURRENT(short var);

    short getPANELOUT_YM_CURRENT();
    void setPANELOUT_YM_CURRENT(short var);

    short getPANELOUT_XP_CURRENT();
    void setPANELOUT_XP_CURRENT(short var);

    short getPANELOUT_XM_CURRENT();
    void setPANELOUT_XM_CURRENT(short var);

};

#endif /* EPSTELEMETRYCONTAINER_H_ */
